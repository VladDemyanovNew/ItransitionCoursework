@model CreateViewModel
<link href="~/css/dropzone.min.css" rel="stylesheet" type="text/css" />
<link href="~/lib/Tag-Input-With-Autocomplete-jQuery-Tagator/fm.tagator.jquery.css" rel="stylesheet" type="text/css" />

<style>
    .custom-border {
        border: 2px dashed #bbb;
        -webkit-border-radius: 5px;
        border-radius: 5px;
    }
</style>

<form action="/" class="row" enctype="multipart/form-data" method="POST">
    <legend class="pl-3">Creating new math problem</legend>
    <div class="col-md-6">
        <div class="mb-3">
            <label class="control-label" for="title">Title</label>
            <input type="text" class="form-control" value="@Model.Title" name="Title" id="Title" placeholder="Some Title">
        </div>
        <div class="mb-3">
            <label class="control-label" for="Topic">Topic</label>
            <select class="form-control" name="Topic" id="Topic" asp-items="Model.Topics" aria-label="Default select example"></select>
        </div>
        <div class="mb-3">
            <label class="control-label" for="Tags">Tags</label>
            <input id="Tags" name="Tags" class="form-control" value="tag1, tag2, tag3">
        </div>
        <div class="mb-3 input-group">
            <span class="input-group-text">Answers</span>
            <input type="text" aria-label="Answer 1" id="answ1" class="form-control">
            <input type="text" aria-label="Answer 2" id="answ2" class="form-control">
            <input type="text" aria-label="Answer 3" id="answ3" class="form-control">
        </div>
        <div class="mb-3">
            <label for="Summary" class="form-label">Summary</label>
            <textarea class="form-control" id="Summary" name="Summary" placeholder="Enter a summary using markdown" rows="3"></textarea>
        </div>
    </div>
    <div class="col-md-6">
        <div class="dropzone custom-border w-100 h-100 d-flex justify-content-center align-items-center flex-wrap" id="my-dropzone" name="mainFileUploader">
            <div class="fallback">
                <input name="file" type="file" multiple />
            </div>
        </div>
    </div>
    <input type="hidden" value="@Model.UserId" id="UserId" name="UserId" />
</form>

<div class="mt-2">
    <button type="submit" class="btn btn-primary" id="submit-all">Create</button>
</div>



<div class="modal fade" id="staticBackdrop" tabindex="-1" role="dialog" data-bs-backdrop="static" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Math problem is created successfully!</p>
            </div>
            <div class="modal-footer">
                <button onclick="window.location.href = window.location.href;" type="button" class="btn btn-primary">Ok</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/lib/Tag-Input-With-Autocomplete-jQuery-Tagator/fm.tagator.jquery.js" type="text/javascript"></script>
    <script src="~/js/dropzone.min.js" type="text/javascript"></script>
    <script type="text/javascript">

        fetch("/Tag/GetTagNames")
            .then(response => response.json())
            .then(json => {
                console.log(json);
                $('#Tags').tagator({
                    autocomplete: json.map(tag => tag.name)
                });
            });

        Dropzone.options.myDropzone = {
            url: "/mathproblem/create",
            autoProcessQueue: false,
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 3,
            acceptedFiles: "image/*",

            init: function () {
                var submitButton = document.querySelector("#submit-all");
                var wrapperThis = this;
                submitButton.addEventListener("click", function () {
                    wrapperThis.processQueue();
                });

                this.on("addedfile", function (file) {
                    var removeButton = Dropzone.createElement("<button class='btn dark'>Remove File</button>");
                    removeButton.addEventListener("click", function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        wrapperThis.removeFile(file);
                    });
                    file.previewElement.appendChild(removeButton);
                });

                this.on('sendingmultiple', function (data, xhr, formData) {
                    let answers = [$("#answ1").val(), $("#answ2").val(), $("#answ3").val()];
                    console.log(answers);
                    formData.append("UserId", $("#UserId").val());
                    formData.append("Title", $("#Title").val());
                    formData.append("Tags", $("#Tags").val());
                    formData.append("Topic", $("#Topic").val());
                    formData.append("Summary", $("#Summary").val());
                    for (let i = 0; i < answers.length; i++)
                        formData.append(`Answers[${i}]`, answers[i]);
                });
            },
            success: function (response) {
                $("#staticBackdrop").modal({ backdrop: 'static', keyboard: false });
            }
        };
    </script>
}
